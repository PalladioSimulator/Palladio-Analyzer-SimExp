package org.palladiosimulator.simexp.markovian.exploitation;

import java.util.Set;

import org.palladiosimulator.simexp.distribution.factory.ProbabilityDistributionFactory;
import org.palladiosimulator.simexp.distribution.function.ProbabilityMassFunction;
import org.palladiosimulator.simexp.distribution.function.ProbabilityMassFunction.Sample;
import org.palladiosimulator.simexp.markovian.activity.BasePolicy;
import org.palladiosimulator.simexp.markovian.model.markovmodel.markoventity.State;
import org.palladiosimulator.simexp.markovian.model.markovmodel.markoventity.Transition;
import org.palladiosimulator.simexp.markovian.util.MarkovianUtil;

public class ProbabilityBasedTransitionPolicy<S> implements BasePolicy<S, Transition<S, Double>> {

    private final static String POLICY_NAME = "ProbabilityBasedTransitionSelection";

    @Override
    public Transition<S, Double> select(State<S> source, Set<Transition<S, Double>> options) {
        // ProbabilityMassFunction pmf =
        // ProbabilityDistributionFactory.INSTANCE.pmfOver(toSamples(options));
        // return (Transition) pmf.drawSample().getValue();

        // static <T> Set<ProbabilityMassFunction.Sample<Transition<T, Double>>>
        // toSamples(Set<Transition<T, Double>> transitions) {

        Set<ProbabilityMassFunction.Sample<Transition<S, Double>>> samples = MarkovianUtil.toSamples(options);
        ProbabilityMassFunction<Transition<S, Double>> pmf = ProbabilityDistributionFactory.INSTANCE.pmfOver(samples);
        Sample<Transition<S, Double>> drawSample = pmf.drawSample();
        return drawSample.getValue();
    }

    @Override
    public String getId() {
        return POLICY_NAME;
    }

}
